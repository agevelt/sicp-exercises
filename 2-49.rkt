#lang sicp
(#%require sicp-pict)

(define (outline-painter)
  (let ((origo (make-vect 0 0))
        (right (make-vect 1 0))
        (top (make-vect 0 1))
        (top-right (make-vect 1 1)))
    (segments->painter (list (make-segment origo right)
                             (make-segment right top-right)
                             (make-segment top-right top)
                             (make-segment top origo)))))

(define (x-painter)
  (let ((origo (make-vect 0 0))
        (right (make-vect 1 0))
        (top (make-vect 0 1))
        (top-right (make-vect 1 1)))
    (segments->painter (list (make-segment origo top-right)
                             (make-segment top right)))))

(define (diamond-painter)
  (let ((left (make-vect 0 0.5))
        (right (make-vect 1 0.5))
        (top (make-vect 0.5 1))
        (bot (make-vect 0.5 0)))
    (segments->painter (list (make-segment left top)
                             (make-segment top right)
                             (make-segment right bot)
                             (make-segment bot left)))))

(define (wave)
  (define (ms x1 y1 x2 y2)
    (make-segment (make-vect x1 y1) (make-vect x2 y2)))
  (segments->painter
   (list (ms 0.3 0.0 0.35 0.5)
         (ms 0.35 0.5 0.3 0.55)
         (ms 0.3 0.55 0.2 0.4)
         (ms 0.2 0.4 0.0 0.6)
         (ms 0.4 0.0 0.5 0.2)
         (ms 0.5 0.2 0.6 0.0)
         (ms 0.7 0.0 0.6 0.4)
         (ms 0.6 0.4 1.0 0.2)
         (ms 1.0 0.3 0.7 0.65)
         (ms 0.7 0.65 0.6 0.65)
         (ms 0.6 0.65 0.63 0.8)
         (ms 0.63 0.8 0.6 1.0)
         (ms 0.4 1.0 0.37 0.8)
         (ms 0.37 0.8 0.4 0.65)
         (ms 0.4 0.65 0.3 0.65)
         (ms 0.3 0.65 0.2 0.6)
         (ms 0.2 0.6 0.0 0.8))))
